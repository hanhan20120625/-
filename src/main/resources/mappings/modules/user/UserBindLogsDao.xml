<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msframe.modules.user.dao.UserBindLogsDao">

    <sql id="userBindLogsColumns">
		a.id AS "id",
		a.user_id AS "user.id",
		a.iptvcode AS "iptvcode",
		a.bindtime AS "bindtime",
		a.result AS "result",
		a.stbid AS "stbid",
		a.status AS "status",
		a.sort AS "sort",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.remarks AS "remarks",
		a.remark1 AS "remark1",
		a.description AS "description",
		userInfo.nickname AS "user.nickname"
	</sql>

    <sql id="userBindLogsJoins">
		LEFT JOIN user userInfo ON userInfo.id = a.user_id
	</sql>


    <select id="get" resultType="UserBindLogs">
        SELECT
        <include refid="userBindLogsColumns"/>
        FROM user_bind_logs a
        <include refid="userBindLogsJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="UserBindLogs">
        SELECT
        <include refid="userBindLogsColumns"/>
        FROM user_bind_logs a
        <include refid="userBindLogsJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="user != null and user.id != null and user.id != ''">
                AND a.user_id = #{user.id}
            </if>
            <if test="bindtime != null and bindtime != ''">
                AND a.bindtime = #{bindtime}
            </if>
            <if test="stbid != null and stbid != ''">
                AND a.stbid LIKE
                <if test="dbName == 'oracle'">'%'||#{stbid}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{stbid}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{stbid},'%')</if>
            </if>
            <if test="status != null and status != '' or status == 0">
                AND a.status = #{status}
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="UserBindLogs">
        SELECT
        <include refid="userBindLogsColumns"/>
        FROM user_bind_logs a
        <include refid="userBindLogsJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
		INSERT INTO user_bind_logs(
			id,
			user_id,
			iptvcode,
			bindtime,
			result,
			stbid,
			status,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			remarks,
			remark1,
			description
		) VALUES (
			#{id},
			#{user.id},
			#{iptvcode},
			#{bindtime},
			#{result},
			#{stbid},
			#{status},
			#{sort},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{remarks},
			#{remark1},
			#{description}
		)
	</insert>

    <update id="update">
		UPDATE user_bind_logs SET 	
			user_id = #{user.id},
			iptvcode = #{iptvcode},
			bindtime = #{bindtime},
			result = #{result},
			stbid = #{stbid},
			status = #{status},
			sort = #{sort},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			remark1 = #{remark1},
			description = #{description}
		WHERE id = #{id}
	</update>


    <!--物理删除-->
    <update id="delete">
		DELETE FROM user_bind_logs
		WHERE id = #{id}
	</update>

    <!--逻辑删除-->
    <update id="deleteByLogic">
		UPDATE user_bind_logs SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


    <!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
    <select id="findUniqueByProperty" resultType="UserBindLogs" statementType="STATEMENT">
		select * FROM user_bind_logs  where ${propertyName} = '${value}'
	</select>

</mapper>