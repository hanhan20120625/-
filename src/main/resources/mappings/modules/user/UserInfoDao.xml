<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msframe.modules.user.dao.UserInfoDao">
    
	<sql id="userColumns">
		a.id AS "id",
		a.login_name AS "loginName",
		a.password AS "password",
		a.real_name AS "realName",
		a.nickname AS "nickname",
		a.id_type AS "idType",
		a.id_number AS "idNumber",
		a.sex AS "sex",
		a.mobile AS "mobile",
		a.address AS "address",
		a.telephone AS "telephone",
		a.email AS "email",
		a.fax AS "fax",
		a.headpic AS "headpic",
		a.login_times AS "loginTimes",
		a.last_login_time AS "lastLoginTime",
		a.last_login_ip AS "lastLoginIp",
		a.isvip AS "isvip",
		a.vip_start_time AS "vipStartTime",
		a.vip_end_time AS "vipEndTime",
		a.pay_type AS "payType",
		a.imsi AS "imsi",
		a.mac AS "mac",
		a.score AS "score",
		a.status AS "status",
		a.sort AS "sort",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.remarks AS "remarks",
		a.remark1 AS "remark1"
	</sql>
	
	<sql id="userJoins">
	</sql>
	
    
	<select id="get" resultType="UserInfo" >
		SELECT 
			<include refid="userColumns"/>
		FROM user a
		<include refid="userJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="UserInfo" >
		SELECT 
			<include refid="userColumns"/>
		FROM user a
		<include refid="userJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="loginName != null and loginName != ''">
				AND a.login_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{loginName},'%')</if>
			</if>
			<if test="realName != null and realName != ''">
				AND a.real_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{realName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{realName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{realName},'%')</if>
			</if>
			<if test="nickname != null and nickname != ''">
				AND a.nickname LIKE 
					<if test="dbName == 'oracle'">'%'||#{nickname}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{nickname}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{nickname},'%')</if>
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number LIKE 
					<if test="dbName == 'oracle'">'%'||#{idNumber}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{idNumber}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{idNumber},'%')</if>
			</if>
			<if test="mobile != null and mobile != ''">
				AND a.mobile LIKE 
					<if test="dbName == 'oracle'">'%'||#{mobile}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{mobile}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{mobile},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.sort DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="UserInfo" >
		SELECT 
			<include refid="userColumns"/>
		FROM user a
		<include refid="userJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO user(
			id,
			login_name,
			password,
			real_name,
			nickname,
			id_type,
			id_number,
			sex,
			mobile,
			address,
			telephone,
			email,
			fax,
			headpic,
			login_times,
			last_login_time,
			last_login_ip,
			isvip,
			vip_start_time,
			vip_end_time,
			pay_type,
			imsi,
			mac,
			score,
			status,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			remarks,
			remark1
		) VALUES (
			#{id},
			#{loginName},
			#{password},
			#{realName},
			#{nickname},
			#{idType},
			#{idNumber},
			#{sex},
			#{mobile},
			#{address},
			#{telephone},
			#{email},
			#{fax},
			#{headpic},
			#{loginTimes},
			#{lastLoginTime},
			#{lastLoginIp},
			#{isvip},
			#{vipStartTime},
			#{vipEndTime},
			#{payType},
			#{imsi},
			#{mac},
			#{score},
			#{status},
			#{sort},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{remarks},
			#{remark1}
		)
	</insert>
	
	<update id="update">
		UPDATE user SET 	
			login_name = #{loginName},
			password = #{password},
			real_name = #{realName},
			nickname = #{nickname},
			id_type = #{idType},
			id_number = #{idNumber},
			sex = #{sex},
			mobile = #{mobile},
			address = #{address},
			telephone = #{telephone},
			email = #{email},
			fax = #{fax},
			headpic = #{headpic},
			login_times = #{loginTimes},
			last_login_time = #{lastLoginTime},
			last_login_ip = #{lastLoginIp},
			isvip = #{isvip},
			vip_start_time = #{vipStartTime},
			vip_end_time = #{vipEndTime},
			pay_type = #{payType},
			imsi = #{imsi},
			mac = #{mac},
			score = #{score},
			status = #{status},
			sort = #{sort},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			remark1 = #{remark1}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM user
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="UserInfo" statementType="STATEMENT">
		select * FROM user  where ${propertyName} = '${value}'
	</select>


	<!-- 排序功能 Begin -->
	<!-- 读取上一条数据 -->
	<select id="selectTopSort" resultType="java.lang.Long">
		SELECT sort FROM user WHERE sort !=''  ORDER BY sort ASC limit 0,1
	</select>

	<select id="selectPreviousSort" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT id,sort FROM user WHERE sort &gt; #{sort} ORDER BY sort ASC limit 0,1
	</select>

	<!-- 读取下一条数据 -->
	<select id="selectNextSort" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT id,sort FROM user WHERE sort &lt; #{sort} ORDER BY sort DESC limit 0,1
	</select>

	<!-- 修改当前数据的排序 -->
	<update id="updateSelfSort" parameterType="java.util.Map">
		UPDATE user SET sort = #{sort} WHERE id = #{id}
	</update>

	<!-- 修改当前的上一条、下一条的排序数据 -->
	<update id="updateOtherSort" parameterType="java.util.Map">
		UPDATE user SET sort = #{sort} WHERE  sort = #{origianlSort}
	</update>
	<!-- 排序功能 End -->
	
</mapper>