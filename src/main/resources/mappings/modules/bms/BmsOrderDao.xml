<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msframe.modules.bms.dao.BmsOrderDao">
    
	<sql id="bmsOrderColumns">
		a.id AS "id",
		a.user_id AS "user.id",
		a.order_number AS "orderNumber",
		a.username AS "username",
		a.nickname AS "nickname",
		a.product_id AS "productId",
		a.product_name AS "productName",
		a.product_ident AS "productIdent",
		a.price AS "price",
		a.ispay AS "ispay",
		a.pay_type AS "payType",
		a.pay_order_number AS "payOrderNumber",
		a.order_time AS "orderTime",
		a.pay_return_time AS "payReturnTime",
		a.result AS "result",
		a.roll_charge AS "rollCharge",
		a.roll_account_type AS "rollAccountType",
		a.last_account_time AS "lastAccountTime",
		a.last_account_status AS "lastAccountStatus",
		a.last_account_reason AS "lastAccountReason",
		a.status AS "status",
		a.sort AS "sort",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.remarks AS "remarks",
		a.remark1 AS "remark1",
		user.name AS "user.name"
	</sql>
	
	<sql id="bmsOrderJoins">
		LEFT JOIN sys_user user ON user.id = a.user_id
	</sql>
	
    
	<select id="get" resultType="BmsOrder" >
		SELECT 
			<include refid="bmsOrderColumns"/>
		FROM bms_order a
		<include refid="bmsOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BmsOrder" >
		SELECT 
			<include refid="bmsOrderColumns"/>
		FROM bms_order a
		<include refid="bmsOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="user != null and user.id != null and user.id != ''">
				AND a.user_id = #{user.id}
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				AND a.order_number = #{orderNumber}
			</if>
			<if test="username != null and username != ''">
				AND a.username = #{username}
			</if>
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			<if test="productName != null and productName != ''">
				AND a.product_name = #{productName}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BmsOrder" >
		SELECT 
			<include refid="bmsOrderColumns"/>
		FROM bms_order a
		<include refid="bmsOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO bms_order(
			id,
			user_id,
			order_number,
			username,
			nickname,
			product_id,
			product_name,
			product_ident,
			price,
			ispay,
			pay_type,
			pay_order_number,
			order_time,
			pay_return_time,
			result,
			roll_charge,
			roll_account_type,
			last_account_time,
			last_account_status,
			last_account_reason,
			status,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			remarks,
			remark1
		) VALUES (
			#{id},
			#{user.id},
			#{orderNumber},
			#{username},
			#{nickname},
			#{productId},
			#{productName},
			#{productIdent},
			#{price},
			#{ispay},
			#{payType},
			#{payOrderNumber},
			#{orderTime},
			#{payReturnTime},
			#{result},
			#{rollCharge},
			#{rollAccountType},
			#{lastAccountTime},
			#{lastAccountStatus},
			#{lastAccountReason},
			#{status},
			#{sort},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{remarks},
			#{remark1}
		)
	</insert>
	
	<update id="update">
		UPDATE bms_order SET 	
			user_id = #{user.id},
			order_number = #{orderNumber},
			username = #{username},
			nickname = #{nickname},
			product_id = #{productId},
			product_name = #{productName},
			product_ident = #{productIdent},
			price = #{price},
			ispay = #{ispay},
			pay_type = #{payType},
			pay_order_number = #{payOrderNumber},
			order_time = #{orderTime},
			pay_return_time = #{payReturnTime},
			result = #{result},
			roll_charge = #{rollCharge},
			roll_account_type = #{rollAccountType},
			last_account_time = #{lastAccountTime},
			last_account_status = #{lastAccountStatus},
			last_account_reason = #{lastAccountReason},
			status = #{status},
			sort = #{sort},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			remark1 = #{remark1}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM bms_order
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE bms_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="BmsOrder" statementType="STATEMENT">
		select * FROM bms_order  where ${propertyName} = '${value}'
	</select>
	
</mapper>